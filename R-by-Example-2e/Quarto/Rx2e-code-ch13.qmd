---
title: 'Code for Chapter 13: Simulation Experiments'
author: "Jim Albert and Maria Rizzo"
subtitle: "R by Example, 2e (2024), Springer"
format:
  html:
    theme: cosmo
    toc: true
    embed-resources: true
    number-sections: true
    number-offset: 12
---

# Simulation Experiments

## Introduction

## Simulating a Game of Chance

```{r}
set.seed(12345)
sample(c(-1, 1), size=50, replace=TRUE)
```

```{r}
set.seed(12348)
win <- sample(c(-1, 1), size=50, replace=TRUE)
cum.win <- cumsum(win)
cum.win
```

```{r}
library(ggplot2)
df <- NULL
for(j in 1:4){
  win <- sample(c(-1, 1), size=50, replace=TRUE)
  df_j <- data.frame(Label = paste("Simulation", j),
                     Index = 1:50,
                     CumSum = cumsum(win))
  df <- rbind(df, df_j)
}
ggplot(df, aes(Index, CumSum)) +
  geom_line() +
  geom_hline(yintercept = 0) +
  facet_wrap(~ Label)
```

```{r}
peter.paul <- function(n = 50){
  win <- sample(c(-1, 1), size = n, replace = TRUE)
  sum(win)
}
```

```{r}
peter.paul()
```

```{r}
F <- replicate(1000, peter.paul())
```

```{r}
table(F)
```

```{r}
require(ggplot2)
ggplot(data.frame(Total_Fortune = F), 
       aes(Total_Fortune)) +
  geom_bar()
```

```{r}
dbinom(25, size=50, prob=0.5)
```

```{r}
peter.paul <- function(n=50){
  win <- sample(c(-1, 1), size=n, replace=TRUE)
  cum.win <-  cumsum(win)
  c(F=sum(win), L=sum(cum.win > 0), M=max(cum.win))
}
```

```{r}
(peter.paul() -> pp.sim)
```

```{r}
S <- replicate(1000, peter.paul())
dim(S)
```

```{r}
times.in.lead <- S["L", ]
```

```{r}
plot(prop.table(table(times.in.lead)),
     ylab = "Count")
```

```{r}
ggplot(data.frame(Maximum_Lead = S["M", ]),
       aes(Maximum_Lead)) +
  geom_bar()
```

## Random Permutations

```{r}
n <- 10
hats <- 1:n
```

```{r}
mixed.hats <- sample(hats)
```

```{r}
hats
```

```{r}
hats == mixed.hats
```

```{r}
correct <- sum(hats == mixed.hats)
correct
```

```{r}
scramble.hats <- function(n){
  hats <- 1:n
  mixed.hats <- sample(n)
  sum(hats == mixed.hats)
}
```

```{r}
(scramble.hats(30) -> y)
```

```{r}
matches <- replicate(1000, scramble.hats(10))
```

```{r}
table(matches)
```

```{r}
mean(matches)
```

```{r}
prop.no.matches <- function(n){
  matches <- replicate(10000, scramble.hats(n))
  sum(matches == 0) / 10000
}
```

```{r}
(prop.no.matches(20) -> p0)
```

```{r}
many.probs <- sapply(2:20, prop.no.matches)
plot(2:20, many.probs,
  xlab="Number of Men", ylab="Prob(no matches)")
abline(h=0.37)
```
## The Collector's Problem

```{r}
cards <- c("Mantle", "Aaron", "Gehrig", "Ruth", "Schmidt",
          "Mays", "Cobb", "DiMaggio", "Williams", "Foxx")
```

```{r}
samp.cards <- sample(cards, size=20, replace=TRUE)
samp.cards
```

```{r}
unique(samp.cards)
```

```{r}
length(unique(samp.cards))
```

```{r}
collector <- function(n, m){
  samp.cards <- sample(1:n, size=m, replace=TRUE)
  ifelse(length(unique(samp.cards)) == n, "yes", "no")
}
```

```{r}
collector(586, 3000)
```

```{r}
(table(replicate(100, collector(586, 3000))) -> out)
```

```{r}
collect2 <- function(n.purchased){
  cost.rcard <- 0.05
  cost.ncard <- 0.25
  samp.cards <- sample(1:586, size=n.purchased, replace=TRUE)
  n.cards <- length(unique(samp.cards))
  n.missed <- 586 - n.cards
  n.purchased * cost.rcard + n.missed * cost.ncard
}
```

```{r}
costs <- replicate(500, collect2(800))
summary(costs)
```

```{r}
expected.cost <- function(n.purchased){
  mean(replicate(100, collect2(n.purchased)))
}
```

```{r}
N <- 500:1500
ECOST <- sapply(N, expected.cost)
plot(N, ECOST, xlab="Cards Purchased",
   ylab="Expected Cost in Dollars", cex=.5)
grid(col="black")
```

## Patterns of Dependence in a Sequence

```{r}
y <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1)
```

```{r}
(out <- rle(y))
```

```{r}
max(out$lengths[out$values == 1])
```

```{r}
longest.streak <- function(y){
  out <- rle(y)
  max(out$lengths[out$values == 1])
}
```

```{r}
library(RbyExample)
utley <- as.numeric(utley2006$H > 0)
longest.streak(utley)
```

```{r}
random.streak <- function(y){
  mixed.up.y <- sample(y)
  longest.streak(mixed.up.y)
}
```

```{r}
L <- replicate(10000, random.streak(utley))
ggplot(data.frame(Longest_Streak = L),
       aes(Longest_Streak)) +
  geom_bar() +
  geom_vline(xintercept = 35, linewidth = 2) +
  annotate(geom = "text", x = 37, y = 1000,
           label = "Utley")
```

