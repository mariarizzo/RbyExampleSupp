---
title: 'Code for Chapter 7: Basic Inference Methods'
author: "Jim Albert and Maria Rizzo"
subtitle: "R by Example, 2e (2024), Springer"
format:
  html:
    theme: cosmo
    toc: true
    embed-resources: true
    number-sections: true
    number-offset: 6
---

# Basic Inference Methods

## Introduction

```{r}
set.seed(1)
```

```{r}
sleep <- c(7.75, 8.5, 8, 6, 8, 6.33, 8.17, 7.75, 7, 6.5, 
          8.75, 8, 7.5, 3, 6.25, 8.5, 9, 6.5, 9, 9.5, 
          9, 8, 8, 9.5)
```

## Learning About a Proportion

```{r}
nine.hours <- ifelse(sleep >= 9, "yes", "no")
table(nine.hours)
```

```{r}
y <- 5; n <- 24
Test <- prop.test(y, n, p=0.5, alternative="two.sided", correct=FALSE)
```

```{r}
names(Test)
```

```{r}
Test$estimate
```

```{r}
Test$statistic
Test$p.value
```

```{r}
Test$conf.int
```

```{r}
y <- 5; n <- 24
Test.adj <- prop.test(y, n, p=0.5, 
                      alternative="two.sided",
                      correct=TRUE)
c(Test.adj$stat, p.value=Test.adj$p.value)
```

```{r}
Test.exact <- binom.test(y, n, p=0.5)
c(Test.exact$stat, p.value=Test.exact$p.value)
```

```{r}
2 * pbinom(5, size=24, prob=0.5)
```

```{r}
Test.exact$conf.int
```

```{r}
agresti.interval <- function(y, n, conf=0.95){
  n1 <- n + 4
  y1 <- y + 2
  phat <- y1 / n1
  me <- qnorm(1 - (1 - conf) / 2) * sqrt(phat * (1 - phat) / n1)
  c(phat - me, phat + me)
}
```

```{r}
agresti.interval(y, n)
```

```{r}
cnames <- c("Wilson Score Interval", "Clopper-Pearson",
 "Agresti-Coull")
cfunctions <- c("prop.test", "binom.test", "agresti.interval")
intervals <- rbind(Test$conf.int, Test.exact$conf.int,
   agresti.interval(y, n))
```

```{r}
data.frame(Name=cnames, Function=cfunctions, 
           LO=intervals[ , 1], HI=intervals[ , 2])
```

## Learning About a Mean

```{r}
hist(sleep)
qqnorm(sleep)
qqline(sleep)
```

```{r}
plot(sleep)
sleep.new <- sleep[-14]
```

```{r}
t.test(sleep.new, mu=8, conf.level=0.90)
```

```{r}
wilcox.test(sleep, mu=8, conf.int=TRUE, conf.level=0.90) -> W
```

```{r}
names(W)
```

```{r}
W$statistic
W$p.value
W$conf.int
```

## Two Sample Inference

```{r}
library(RbyExample)
str(twins)
```

```{r}
log.wages <- log(twins$HRWAGEH)
```

```{r}
College <- ifelse(twins$EDUCH > 12, "yes", "no")
```

```{r}
boxplot(log.wages ~ College, 
        horizontal=TRUE, xlab="log Wage",
        names=c("High School", "Some College"))
```

```{r}
t.test(log.wages ~ College)
```

```{r}
t.test(log.wages ~ College, var.equal=TRUE)$p.value
```

```{r}
t.test(log.wages ~ College, var.equal=TRUE)$statistic^2
oneway.test(log.wages ~ College, var.equal=TRUE)
```

```{r}
wilcox.test(log.wages ~ College, conf.int=TRUE)
```

```{r}
log.wages <- log(twins$HRWAGEH)
College <- ifelse(twins$EDUCH > 12, "yes", "no")
```

```{r}
table(College)
```

```{r}
resample <- function()
  t.test(log.wages ~ sample(College))$statistic
```

```{r}
many.T <- replicate(1000, 
                   resample())
```

```{r}
T.obs <- t.test(log.wages ~ College)$statistic
T.obs
```

```{r}
hist(many.T)
abline(v=T.obs)
```

```{r}
2 * mean(many.T < T.obs)
```

## Paired Sample Inference Using a t Statistic

```{r}
twins.diff <- subset(twins, EDUCL != EDUCH)
```

```{r}
twins.diff <- twins.diff[complete.cases(twins.diff), ]
```

```{r}
log.wages.low <- with(twins.diff,
   ifelse(EDUCL < EDUCH, log(HRWAGEL), log(HRWAGEH)))
log.wages.high <- with(twins.diff,
   ifelse(EDUCL < EDUCH, log(HRWAGEH), log(HRWAGEL)))
```

```{r}
head(cbind(log.wages.low, log.wages.high))
```

```{r}
hist(log.wages.high - log.wages.low)
```

```{r}
t.test(log.wages.low, log.wages.high, paired=TRUE)
```
